
# Working with Text Files

Exam Objectives:
- Using grep and regular expressions to analyze text.
- Create and edit text files.

less = opens file in a pager for easy reading
cat = dumps content of file to the screen
head = shows first 10 lines
tail = shows last 10 lines
cut = used to filter specific columns or characters from a text file
sort = sorts contents of a text file
wc = counts number of lines, words, and characters in a file
less options = /sometext (forward search) ?sometext (backward search)
sort options = -n (numeric) -r (reverse order) -k (specific column)

#Grep Options
-i = not case sensitive
-v = only show lines that dont contain the regular expression
-r = searching files in current and subdirectories
-e = searching for lines more than one regular expression
-A (number) = show number of lines after matching regular expression
-B (number) = show number of lines before matching regular expression

#Regular Expressions
. it matches any single character except a newline.
* it matches zero or more existences of the immediate character preceding it.
[ character(s) ] it matches any one of the characters specified in character(s), one can also use a hyphen (-) to mean a range of characters such as [a-f], [1-5], and so on.
^ it matches the beginning of a line in a file.
$ matches the end of line in a file.
\ it is an escape character.
[0-9] = means a single number
[a-z] = means a single lower case letter
[A-Z]  means a single upper case letter
[a-zA-Z] = means a single letter
[a-zA-Z 0-9] = means a single letter or number
^sometext = lines starting with sometext
sometext$ = lines ending with sometext
[abd] = look for a b or d.
e\{2\} = match exactly two of 'e'
e\{1,3\} = match between 1 and 3 of the character '3'
colou?r = match 0 or 1 of the previous character so it will match 'color' or 'colour'
ca*t = match 0 or infinite amount of the character 'a'.




